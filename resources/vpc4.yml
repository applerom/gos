Description: Create Vpc4 - DMZ and Private subnet with NAT Gateway

Parameters:

## Common parameters

  MainDomain:
    Description: Enter main domain
    Type: String
    Default: some.domain
    
  TagEnvironment:
    Description: Environment (development, test etc)
    Type: String
    Default: some-tag_env

  ##AvailabilityZone1:
  ##  Description: Availability Zone 1 Name in Region
  ##  Type: AWS::EC2::AvailabilityZone::Name
  ##  
  ##AvailabilityZone2:
  ##  Description: Availability Zone 2 Name in Region
  ##  Type: AWS::EC2::AvailabilityZone::Name

## CIDR IP blocks

  CidrBlockVpc4:
    Description: CIDR block for Vpc4
    Type: String
    Default: 10.40.0.0/16

  CidrBlockVpc4DmzA:
    Description: CIDR block for Vpc4 DMZ AZ-1b subnet
    Type: String
    Default: 10.40.11.0/24

  CidrBlockVpc4DmzB:
    Description: CIDR block for Vpc4 DMZ AZ-1b subnet
    Type: String
    Default: 10.40.12.0/24

  CidrBlockVpc4PrivateAppA:
    Description: CIDR block for Vpc4 Private Application AZ-1a subnet
    Type: String
    Default: 10.40.21.0/24

  CidrBlockVpc4PrivateAppB:
    Description: CIDR block for Vpc4 Private Application AZ-1b subnet
    Type: String
    Default: 10.40.22.0/24

  CidrBlockVpc4PrivateDbA:
    Description: CIDR block for Vpc4 Private DB AZ-1a subnet
    Type: String
    Default: 10.40.201.0/24

  CidrBlockVpc4PrivateDbB:
    Description: CIDR block for Vpc4 Private DB AZ-1b subnet
    Type: String
    Default: 10.40.202.0/24

  LogGroupVpc4Name:
    Description: Default Vpc4 log group name
    Type: String
    Default: Vpc4

  CreateVpc:
    Description: Create Vpc
    Type: String
    Default: 'yes'

  CreatePeer:
    Description: Create Peer
    Type: String
    Default: 'yes'

  CreateNat:
    Description: Create NAT
    Type: String
    Default: 'yes'


Conditions:
  CreateNat:
    !Equals [!Ref CreateNat, 'yes']


Resources:

  vpc4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlockVpc4
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vpc4
        - Key: Environment
          Value: !Ref TagEnvironment
          
  subnetVpc4DmzA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrBlockVpc4DmzA
      AvailabilityZone: !Select [0, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 DMZ subnet A
        - Key: Environment
          Value: !Ref TagEnvironment
          
  subnetVpc4DmzB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrBlockVpc4DmzB
      AvailabilityZone: !Select [1, !GetAZs "" ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 DMZ subnet B
        - Key: Environment
          Value: !Ref TagEnvironment
          
  subnetVpc4PrivateAppA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrBlockVpc4PrivateAppA
      AvailabilityZone: !Select [0, !GetAZs "" ]
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 App subnet A
        - Key: Environment
          Value: !Ref TagEnvironment
          
  subnetVpc4PrivateAppB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrBlockVpc4PrivateAppB
      AvailabilityZone: !Select [1, !GetAZs "" ]
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 App subnet B
        - Key: Environment
          Value: !Ref TagEnvironment
          
  subnetVpc4PrivateDbA:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrBlockVpc4PrivateDbA
      AvailabilityZone: !Select [0, !GetAZs "" ]
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 DB subnet A
        - Key: Environment
          Value: !Ref TagEnvironment
          
  subnetVpc4PrivateDbB:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: !Ref CidrBlockVpc4PrivateDbB
      AvailabilityZone: !Select [1, !GetAZs "" ]
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 DB subnet B
        - Key: Environment
          Value: !Ref TagEnvironment
          
  igwVpc4:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Vpc4 Internet Gateway
        - Key: Environment
          Value: !Ref TagEnvironment
          
  eipNat1:
    Condition: CreateNat
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
          
  natVpc4:
    Condition: CreateNat
    Type: AWS::EC2::NatGateway
    DependsOn: igwVpc4
    Properties:
      AllocationId: !GetAtt eipNat1.AllocationId
      SubnetId: !Ref subnetVpc4DmzA
          
  rtbVpc4Dmz:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 DMZ Route
          
  rtbVpc4Private:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref vpc4
      Tags:
        - Key: Name
          Value: Vpc4 Private Route
          
  vpcgwattachmentVpc4:
    Type: AWS::EC2::VPCGatewayAttachment
    DependsOn: igwVpc4
    Properties:
      VpcId: !Ref vpc4
      InternetGatewayId: !Ref igwVpc4
      
  routeVpc4Dmz:
    Type: AWS::EC2::Route
    DependsOn: vpcgwattachmentVpc4
    Properties:
      RouteTableId: !Ref rtbVpc4Dmz
      GatewayId: !Ref igwVpc4
      DestinationCidrBlock: 0.0.0.0/0
      
  routeVpc4Private:
    Condition: CreateNat
    Type: AWS::EC2::Route
    DependsOn: vpcgwattachmentVpc4
    Properties:
      RouteTableId: !Ref rtbVpc4Private
      NatGatewayId: !Ref natVpc4
      DestinationCidrBlock: 0.0.0.0/0
      
  subnetrtbassocVpc4DmzA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref rtbVpc4Dmz
      SubnetId: !Ref subnetVpc4DmzA
      
  subnetrtbassocVpc4DmzB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref rtbVpc4Dmz
      SubnetId: !Ref subnetVpc4DmzB
      
  subnetrtbassocVpc4PrivateAppA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref rtbVpc4Private
      SubnetId: !Ref subnetVpc4PrivateAppA
      
  subnetrtbassocVpc4PrivateAppB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref rtbVpc4Private
      SubnetId: !Ref subnetVpc4PrivateAppB
      
  subnetrtbassocVpc4PrivateDbA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref rtbVpc4Private
      SubnetId: !Ref subnetVpc4PrivateDbA
      
  subnetrtbassocVpc4PrivateDbB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref rtbVpc4Private
      SubnetId: !Ref subnetVpc4PrivateDbB

  dhcpVpc4:
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: !Join ['.', ['internal', !Ref MainDomain]]
      DomainNameServers:
        - AmazonProvidedDNS
      
  dhcpassocVpc4:
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref vpc4
      DhcpOptionsId: !Ref dhcpVpc4

  loggroupVpc4:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Ref LogGroupVpc4Name
      RetentionInDays: 14


Outputs:

## Common parameters

  TagEnvironment:
    Value: !Ref TagEnvironment
    Export:
      Name: TagEnvironment
      
  MainDomain:
    Value: !Ref MainDomain
    Export:
      Name: MainDomain

  AvailabilityZone1:
    Value: !Select [0, !GetAZs "" ]
    Export:
      Name: AvailabilityZone1
      
  AvailabilityZone2:
    Value: !Select [1, !GetAZs "" ]
    Export:
      Name: AvailabilityZone2

## CIDR IP blocks
      
  CidrBlockVpc4:
    Value: !Ref CidrBlockVpc4
    Export:
      Name: CidrBlockVpc4

  CidrBlockVpc4DmzA:
    Value: !Ref CidrBlockVpc4DmzA
    Export:
      Name: CidrBlockVpc4DmzA

  CidrBlockVpc4DmzB:
    Value: !Ref CidrBlockVpc4DmzB
    Export:
      Name: CidrBlockVpc4DmzB

  CidrBlockVpc4PrivateAppA:
    Value: !Ref CidrBlockVpc4PrivateAppA
    Export:
      Name: CidrBlockVpc4PrivateAppA

  CidrBlockVpc4PrivateAppB:
    Value: !Ref CidrBlockVpc4PrivateAppB
    Export:
      Name: CidrBlockVpc4PrivateAppB

  CidrBlockVpc4PrivateDbA:
    Value: !Ref CidrBlockVpc4PrivateDbA
    Export:
      Name: CidrBlockVpc4PrivateDbA

  CidrBlockVpc4PrivateDbB:
    Value: !Ref CidrBlockVpc4PrivateDbB
    Export:
      Name: CidrBlockVpc4PrivateDbB

  CreateVpc:
    Value: !Ref CreateVpc

  CreatePeer:
    Value: !Ref CreatePeer

## created resources

  vpc4:
    Value: !Ref vpc4
    Export:
      Name: vpc4

  subnetVpc4DmzA:
    Value: !Ref subnetVpc4DmzA
    Export:
      Name: subnetVpc4DmzA
      
  subnetVpc4DmzB:
    Value: !Ref subnetVpc4DmzB
    Export:
      Name: subnetVpc4DmzB
      
  subnetVpc4PrivateAppA:
    Value: !Ref subnetVpc4PrivateAppA
    Export:
      Name: subnetVpc4PrivateAppA
    
  subnetVpc4PrivateAppB:
    Value: !Ref subnetVpc4PrivateAppB
    Export:
      Name: subnetVpc4PrivateAppB
    
  subnetVpc4PrivateDbA:
    Value: !Ref subnetVpc4PrivateDbA
    Export:
      Name: subnetVpc4PrivateDbA
    
  subnetVpc4PrivateDbB:
    Value: !Ref subnetVpc4PrivateDbB
    Export:
      Name: subnetVpc4PrivateDbB
      
  rtbVpc4Dmz:
    Value: !Ref rtbVpc4Dmz
    Export:
      Name: rtbVpc4Dmz
      
  rtbVpc4Private:
    Value: !Ref rtbVpc4Private
    Export:
      Name: rtbVpc4Private

  loggroupVpc4:
    Value: !Ref loggroupVpc4
    Export:
      Name: loggroupVpc4
